events {
    worker_connections 1024;
}

http {
    server {
        # redirect http requests to https
        listen 80;
        server_name signalstream.org;
        return 301 https://$host$request_uri;
    }

    upstream datahub {
        # Socket.IO requires sticky sessions
        ip_hash;

        server 127.0.0.1:5000;
        # to scale the app, add more addresses here
    }


    server {
        listen 443 ssl;
        server_name signalstream.org;
        root /home/ubuntu/data-hub/app;
        index index.html index.htm;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/signalstream.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/signalstream.org/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        #ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:[7/86]ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;  # Turn on OCSP stapling as recommended at https://community.letsencrypt.org/t/integration-guide/13123
        ssl_stapling_verify on;
        #add_header Strict-Transport-Security max-age=15768000;  # uncomment after testing

        location = / {  # redirect "/" to /index.html
            proxy_pass http://datahub/index;
        }

        # serve static files directly, use flask if not
        location / {
            root /home/ubuntu/data-hub/app/static;
            try_files $uri $uri/ @flask;
        }

        # Serve dynamic content through flask
        location @flask {
            proxy_pass http://datahub;
            proxy_redirect off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # reverse proxy for Socket.IO connections
        location /socket.io {
            proxy_pass http://datahub/socket.io;
            proxy_http_version 1.1;
            proxy_redirect off;
            proxy_buffering off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # letsencrypt host validation
        location ~ /.well-known {
            allow all;
        }
    }
}