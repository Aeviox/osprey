Server side documentation:

1. install requirement package in requirement.txt, make sure the pip is installed 
command: pip install -r requirements.txt

2.Ensure you are in /root/capstone-site and then Enters the virtual python environment
command: source venv/bin/activate

3. Runs the website: sh run.sh or gunicorn --bind 0.0.0.0:5000 capstone:app

4. Open the browser and input server ip address with 5000 port #, for example , for server 51.161.9.90:5000


Raspberry Pi side documentation:

1.

Configuration for NGINX on Raspberry Pi was done by following the steps in: Running Flask under NGINX on the Raspberry Pi


When using AJAX, as a security feature, you cannot call URLs on 3rd-party domains by default. 
There are rules for Cross-Origin Resource Sharing (CORS) that you must follow. 
CORS uses HTTP headers to tell browsers to give a web application running at one origin, 
access to selected resources from a different origin. 
A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, or port) from its own. 
Browsers restrict cross origin HTTP requests initiated from scripts. 
For example, XMLHttpRequest and the Fetch API follow the same-origin-policy. 
There are ways to allow for CORS to occur, the following steps below were taken to allow for cross-origin resource sharing between NGINX on Raspberry Pi and the web browser:

In /etc/nginx/sites-available/msu-cse-capstone-spring-2020-master_proxy, the following was added to the file:

	add_header Access-Control-Allow-Origin $http_origin;

The following commands were then run to solidify the changes:
	
	sudo systemctl restart nginx
	sudo systemctl daemon-reload

2.  configuration for data ingestion layer
sudo apt-get install python-mysqldb
sudo apt-get install python3-dev default-libmysqlclient-dev build-essential
pip install PyMySQL
pip install Pillow

